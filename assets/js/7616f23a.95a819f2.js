"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[769],{9933:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"introduction/overview","title":"Overview","description":"Bitcoin MCP Server is a Model Context Protocol (MCP) server that enables AI models to interact with Bitcoin. It provides a set of tools for generating keys, validating addresses, decoding transactions, querying the blockchain, and more.","source":"@site/docs/introduction/overview.md","sourceDirName":"introduction","slug":"/introduction/overview","permalink":"/bitcoin-mcp/docs/introduction/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/AbdelStark/bitcoin-mcp/tree/main/docs/docs/introduction/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Introduction to Bitcoin MCP","permalink":"/bitcoin-mcp/docs/intro"},"next":{"title":"Features","permalink":"/bitcoin-mcp/docs/introduction/features"}}');var r=n(4848),o=n(8453);const s={sidebar_position:1},c="Overview",a={},d=[{value:"What is MCP?",id:"what-is-mcp",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Project Structure",id:"project-structure",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"overview",children:"Overview"})}),"\n",(0,r.jsx)(t.p,{children:"Bitcoin MCP Server is a Model Context Protocol (MCP) server that enables AI models to interact with Bitcoin. It provides a set of tools for generating keys, validating addresses, decoding transactions, querying the blockchain, and more."}),"\n",(0,r.jsx)(t.h2,{id:"what-is-mcp",children:"What is MCP?"}),"\n",(0,r.jsx)(t.p,{children:"The Model Context Protocol (MCP) is a standardized way for AI models to interact with external tools and services. By implementing MCP, this server allows AI assistants like Claude and Goose to perform Bitcoin-related operations directly."}),"\n",(0,r.jsx)(t.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Generate Bitcoin key pairs"}),"\n",(0,r.jsx)(t.li,{children:"Validate Bitcoin addresses"}),"\n",(0,r.jsx)(t.li,{children:"Decode raw transactions"}),"\n",(0,r.jsx)(t.li,{children:"Query latest block information"}),"\n",(0,r.jsx)(t.li,{children:"Retrieve transaction details"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:"bitcoin-mcp/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 bitcoin-client.ts      # Bitcoin utility functions and API calls\n\u2502   \u251c\u2500\u2500 sse_server.ts         # Server implementation using SSE transport\n\u2502   \u251c\u2500\u2500 stdio_server.ts       # Server implementation using STDIO transport\n\u2502   \u251c\u2500\u2500 index.ts             # Main entry point\n\u2502   \u251c\u2500\u2500 cli.ts               # CLI launcher\n\u2502   \u251c\u2500\u2500 bitcoin_mcp_types.ts # Shared types and schemas\n\u2502   \u2514\u2500\u2500 utils/\n\u2502       \u2514\u2500\u2500 logger.ts        # Logger setup\n\u251c\u2500\u2500 .env.example             # Example environment configuration\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 tsconfig.json\n\u2514\u2500\u2500 README.md\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>c});var i=n(6540);const r={},o=i.createContext(r);function s(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);