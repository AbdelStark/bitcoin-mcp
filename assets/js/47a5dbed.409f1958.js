"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[87],{2953:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"error-handling","title":"Error Handling","description":"A guide to understanding and handling errors in the Bitcoin MCP Server.","source":"@site/docs/error-handling.md","sourceDirName":".","slug":"/error-handling","permalink":"/bitcoin-mcp/docs/error-handling","draft":false,"unlisted":false,"editUrl":"https://github.com/AbdelStark/bitcoin-mcp/tree/main/docs/docs/error-handling.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Get Transaction","permalink":"/bitcoin-mcp/docs/api/get-transaction"},"next":{"title":"Contributing","permalink":"/bitcoin-mcp/docs/contributing"}}');var s=n(4848),l=n(8453);const o={sidebar_position:6},t="Error Handling",d={},a=[{value:"Common Error Types",id:"common-error-types",level:2},{value:"Network Errors",id:"network-errors",level:3},{value:"Validation Errors",id:"validation-errors",level:3},{value:"Runtime Errors",id:"runtime-errors",level:3},{value:"Error Response Format",id:"error-response-format",level:2},{value:"Example Error Scenarios",id:"example-error-scenarios",level:2},{value:"Invalid Address",id:"invalid-address",level:3},{value:"Network Issues",id:"network-issues",level:3},{value:"Rate Limiting",id:"rate-limiting",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Error Handling",id:"error-handling-1",level:3},{value:"Recovery Strategies",id:"recovery-strategies",level:3},{value:"Debugging Tips",id:"debugging-tips",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"error-handling",children:"Error Handling"})}),"\n",(0,s.jsx)(r.p,{children:"A guide to understanding and handling errors in the Bitcoin MCP Server."}),"\n",(0,s.jsx)(r.h2,{id:"common-error-types",children:"Common Error Types"}),"\n",(0,s.jsx)(r.h3,{id:"network-errors",children:"Network Errors"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Connection failures to Bitcoin network"}),"\n",(0,s.jsx)(r.li,{children:"API rate limiting"}),"\n",(0,s.jsx)(r.li,{children:"Timeout issues"}),"\n",(0,s.jsx)(r.li,{children:"Network configuration problems"}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"validation-errors",children:"Validation Errors"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Invalid Bitcoin addresses"}),"\n",(0,s.jsx)(r.li,{children:"Malformed transaction data"}),"\n",(0,s.jsx)(r.li,{children:"Incorrect parameter types"}),"\n",(0,s.jsx)(r.li,{children:"Missing required fields"}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"runtime-errors",children:"Runtime Errors"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Memory limitations"}),"\n",(0,s.jsx)(r.li,{children:"System resource constraints"}),"\n",(0,s.jsx)(r.li,{children:"Concurrent request handling"}),"\n",(0,s.jsx)(r.li,{children:"Server configuration issues"}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"error-response-format",children:"Error Response Format"}),"\n",(0,s.jsx)(r.p,{children:"All errors follow a consistent format:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Clear error message"}),"\n",(0,s.jsx)(r.li,{children:"Error type identification"}),"\n",(0,s.jsx)(r.li,{children:"Relevant context"}),"\n",(0,s.jsx)(r.li,{children:"Suggested resolution (when applicable)"}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"example-error-scenarios",children:"Example Error Scenarios"}),"\n",(0,s.jsx)(r.h3,{id:"invalid-address",children:"Invalid Address"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:'Error: Invalid Bitcoin address\nDetails: Address "1234" fails checksum validation\nResolution: Ensure the address follows correct Bitcoin address format\n'})}),"\n",(0,s.jsx)(r.h3,{id:"network-issues",children:"Network Issues"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"Error: Unable to fetch transaction\nDetails: Network request timeout after 30s\nResolution: Check network connectivity and try again\n"})}),"\n",(0,s.jsx)(r.h3,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"Error: API rate limit exceeded\nDetails: Too many requests in 60s window\nResolution: Implement request throttling or wait before retrying\n"})}),"\n",(0,s.jsx)(r.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(r.h3,{id:"error-handling-1",children:"Error Handling"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"Always check input validation"}),"\n",(0,s.jsx)(r.li,{children:"Implement proper error catching"}),"\n",(0,s.jsx)(r.li,{children:"Log errors with sufficient context"}),"\n",(0,s.jsx)(r.li,{children:"Return meaningful error messages"}),"\n",(0,s.jsx)(r.li,{children:"Handle both synchronous and asynchronous errors"}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"recovery-strategies",children:"Recovery Strategies"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"Implement automatic retries for transient failures"}),"\n",(0,s.jsx)(r.li,{children:"Use exponential backoff for rate limits"}),"\n",(0,s.jsx)(r.li,{children:"Cache responses when appropriate"}),"\n",(0,s.jsx)(r.li,{children:"Provide fallback options where possible"}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"debugging-tips",children:"Debugging Tips"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"Enable debug logging:"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"LOG_LEVEL=debug npm start\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"2",children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:"Check server logs for detailed error information"}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:"Verify network connectivity and configuration"}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:"Ensure all dependencies are properly installed"}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>t});var i=n(6540);const s={},l=i.createContext(s);function o(e){const r=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(l.Provider,{value:r},e.children)}}}]);