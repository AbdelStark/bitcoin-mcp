"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[154],{9214:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Introduction","items":[{"type":"link","label":"Introduction to Bitcoin MCP","href":"/bitcoin-mcp/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Overview","href":"/bitcoin-mcp/docs/introduction/overview","docId":"introduction/overview","unlisted":false},{"type":"link","label":"Features","href":"/bitcoin-mcp/docs/introduction/features","docId":"introduction/features","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Installation","href":"/bitcoin-mcp/docs/getting-started/installation","docId":"getting-started/installation","unlisted":false},{"type":"link","label":"Development Setup","href":"/bitcoin-mcp/docs/getting-started/development-setup","docId":"getting-started/development-setup","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Integration Guides","items":[{"type":"link","label":"Claude Desktop Integration","href":"/bitcoin-mcp/docs/integration/claude-desktop","docId":"integration/claude-desktop","unlisted":false},{"type":"link","label":"Goose Integration","href":"/bitcoin-mcp/docs/integration/goose","docId":"integration/goose","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"API Reference","items":[{"type":"link","label":"Generate Key","href":"/bitcoin-mcp/docs/api/generate-key","docId":"api/generate-key","unlisted":false},{"type":"link","label":"Validate Address","href":"/bitcoin-mcp/docs/api/validate-address","docId":"api/validate-address","unlisted":false},{"type":"link","label":"Decode Transaction","href":"/bitcoin-mcp/docs/api/decode-tx","docId":"api/decode-tx","unlisted":false},{"type":"link","label":"Get Latest Block","href":"/bitcoin-mcp/docs/api/get-latest-block","docId":"api/get-latest-block","unlisted":false},{"type":"link","label":"Get Transaction","href":"/bitcoin-mcp/docs/api/get-transaction","docId":"api/get-transaction","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Error Handling","href":"/bitcoin-mcp/docs/error-handling","docId":"error-handling","unlisted":false},{"type":"link","label":"Contributing","href":"/bitcoin-mcp/docs/contributing","docId":"contributing","unlisted":false}]},"docs":{"api/decode-tx":{"id":"api/decode-tx","title":"Decode Transaction","description":"A tool for parsing and understanding raw Bitcoin transactions by converting them into a human-readable format.","sidebar":"tutorialSidebar"},"api/generate-key":{"id":"api/generate-key","title":"Generate Key","description":"A tool for generating new Bitcoin key pairs. This tool creates a complete set of Bitcoin credentials including an address, private key in WIF format, and public key.","sidebar":"tutorialSidebar"},"api/get-latest-block":{"id":"api/get-latest-block","title":"Get Latest Block","description":"A tool for retrieving information about the most recently mined Bitcoin block.","sidebar":"tutorialSidebar"},"api/get-transaction":{"id":"api/get-transaction","title":"Get Transaction","description":"A tool for retrieving detailed information about any Bitcoin transaction using its transaction ID (TXID).","sidebar":"tutorialSidebar"},"api/validate-address":{"id":"api/validate-address","title":"Validate Address","description":"A tool for checking if a Bitcoin address is valid and determining its properties.","sidebar":"tutorialSidebar"},"contributing":{"id":"contributing","title":"Contributing","description":"A guide for contributing to the Bitcoin MCP Server project.","sidebar":"tutorialSidebar"},"error-handling":{"id":"error-handling","title":"Error Handling","description":"A guide to understanding and handling errors in the Bitcoin MCP Server.","sidebar":"tutorialSidebar"},"getting-started/development-setup":{"id":"getting-started/development-setup","title":"Development Setup","description":"This guide will help you set up Bitcoin MCP Server for local development.","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"Bitcoin MCP Server can be installed and run in multiple ways. Choose the method that best fits your needs.","sidebar":"tutorialSidebar"},"integration/claude-desktop":{"id":"integration/claude-desktop","title":"Claude Desktop Integration","description":"A guide to integrating Bitcoin MCP Server with Claude Desktop.","sidebar":"tutorialSidebar"},"integration/goose":{"id":"integration/goose","title":"Goose Integration","description":"A guide to integrating Bitcoin MCP Server with the Goose AI framework.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction to Bitcoin MCP","description":"Welcome to the Bitcoin MCP Server documentation! This server enables AI models to interact with Bitcoin through the Model Context Protocol (MCP).","sidebar":"tutorialSidebar"},"introduction/features":{"id":"introduction/features","title":"Features","description":"Bitcoin MCP Server provides a comprehensive set of tools for AI models to interact with Bitcoin. Here\'s a detailed look at the available features:","sidebar":"tutorialSidebar"},"introduction/overview":{"id":"introduction/overview","title":"Overview","description":"Bitcoin MCP Server is a Model Context Protocol (MCP) server that enables AI models to interact with Bitcoin. It provides a set of tools for generating keys, validating addresses, decoding transactions, querying the blockchain, and more.","sidebar":"tutorialSidebar"}}}}')}}]);