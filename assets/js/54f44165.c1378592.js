"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[924],{4575:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"getting-started/installation","title":"Installation","description":"Bitcoin MCP Server can be installed and run in multiple ways. Choose the method that best fits your needs.","source":"@site/docs/getting-started/installation.md","sourceDirName":"getting-started","slug":"/getting-started/installation","permalink":"/bitcoin-mcp/docs/getting-started/installation","draft":false,"unlisted":false,"editUrl":"https://github.com/AbdelStark/bitcoin-mcp/tree/main/docs/docs/getting-started/installation.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Features","permalink":"/bitcoin-mcp/docs/introduction/features"},"next":{"title":"Development Setup","permalink":"/bitcoin-mcp/docs/getting-started/development-setup"}}');var l=t(4848),s=t(8453);const r={sidebar_position:1},a="Installation",o={},d=[{value:"NPX (Recommended)",id:"npx-recommended",level:2},{value:"Global Installation",id:"global-installation",level:2},{value:"Local Development Installation",id:"local-development-installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Verifying Installation",id:"verifying-installation",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"installation",children:"Installation"})}),"\n",(0,l.jsx)(n.p,{children:"Bitcoin MCP Server can be installed and run in multiple ways. Choose the method that best fits your needs."}),"\n",(0,l.jsx)(n.h2,{id:"npx-recommended",children:"NPX (Recommended)"}),"\n",(0,l.jsx)(n.p,{children:"The simplest way to run Bitcoin MCP Server is using npx:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"npx -y bitcoin-mcp@latest\n"})}),"\n",(0,l.jsx)(n.p,{children:"This command will automatically download and run the latest version of the server."}),"\n",(0,l.jsx)(n.h2,{id:"global-installation",children:"Global Installation"}),"\n",(0,l.jsx)(n.p,{children:"If you prefer to install the package globally:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"npm install -g bitcoin-mcp\n"})}),"\n",(0,l.jsx)(n.p,{children:"After installation, you can run the server using:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"bitcoin-mcp\n"})}),"\n",(0,l.jsx)(n.h2,{id:"local-development-installation",children:"Local Development Installation"}),"\n",(0,l.jsx)(n.p,{children:"For development or contributing to the project:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Clone the repository:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/AbdelStark/bitcoin-mcp\ncd bitcoin-mcp\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsx)(n.li,{children:"Install dependencies:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"npm install\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"3",children:["\n",(0,l.jsx)(n.li,{children:"Build the project:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"4",children:["\n",(0,l.jsx)(n.li,{children:"Start the server:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"npm start\n"})}),"\n",(0,l.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Copy the example environment file:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"cp .env.example .env\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsx)(n.li,{children:"Configure the following environment variables:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-env",children:"LOG_LEVEL=info\nBITCOIN_NETWORK=mainnet\nSERVER_MODE=stdio\nPORT=3000\n"})}),"\n",(0,l.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Variable"}),(0,l.jsx)(n.th,{children:"Description"}),(0,l.jsx)(n.th,{children:"Default"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"LOG_LEVEL"}),(0,l.jsx)(n.td,{children:"Logging verbosity (debug/info/warn/error)"}),(0,l.jsx)(n.td,{children:"info"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"BITCOIN_NETWORK"}),(0,l.jsx)(n.td,{children:"Bitcoin network (mainnet/testnet)"}),(0,l.jsx)(n.td,{children:"mainnet"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"SERVER_MODE"}),(0,l.jsx)(n.td,{children:"Server transport mode (stdio/sse)"}),(0,l.jsx)(n.td,{children:"stdio"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"PORT"}),(0,l.jsx)(n.td,{children:"Port for SSE mode"}),(0,l.jsx)(n.td,{children:"3000"})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"verifying-installation",children:"Verifying Installation"}),"\n",(0,l.jsx)(n.p,{children:"To verify your installation is working correctly:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Start the server in STDIO mode:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"bitcoin-mcp\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"The server should start without errors and be ready to accept commands."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Test a basic command (in another terminal):"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'echo \'{"jsonrpc":"2.0","method":"get_latest_block","params":{},"id":1}\' | nc localhost 3000\n'})}),"\n",(0,l.jsx)(n.p,{children:"You should receive a JSON response with the latest block information."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const l={},s=i.createContext(l);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);